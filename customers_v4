'''
All Orders taken from 

REPORTS --> FULFILLMENT --> ALL ORDERS
'''


'''
print ('Index\tAmazon Column Name')
print ('-------------------------')
a = customerFile.readline()
num = 0
for name in a.split('\t'):
        print(num, '\t' , name)
        num += 1
'''
def main():
    import pickle
    import calendar
    from datetime import date
    from os.path import isfile

    pfile = 'customerDict.dat'
    '''
    custDict = {}

    outPutFile = open(pfile, 'wb')
    pickle.dump(custDict, outPutFile)
    outPutFile.close()
    '''

    '''
    this method creates a list of customer's addresses

    '''

    def address(customerList, num):
            add1 = customerList[num].split('\t')[25]    
            add2 = customerList[num].split('\t')[26]
            add3 = customerList[num].split('\t')[27]
            city = customerList[num].split('\t')[28]
            state = customerList[num].split('\t')[29]
            zipcode = customerList[num].split('\t')[30]
            addList = [add1, add2, add3, city, state, zipcode] #creates a address list
            return addList

    '''
    this method accepts a list, the name of the product and the quantity and returns a list with all the
    products in one list
    '''
    
    
    def nameData(nameData, name, quantity):
            nameData[4][1] += quantity
            if name == "MomCinVanLacSmoothie1lb":
                    nameData[0][1] += quantity
            elif name == "MomStrawBanLacSmoothie1lb":
                    nameData[1][1] += quantity
            elif name == "MomPumSpiceLacSmoothie1lb":
                    nameData[2][1] += quantity
            else:
                    nameData[3][1] += quantity
            return nameData

    '''
    this method accepts a list and saves the data into a ".dat" file
    '''

    def customerDict(customerList):
        
        inputFile = open(pfile, 'rb') # Opens customer file
        customerDict = pickle.load(inputFile) #loads the customer file into a dictionary variable
        inputFile.close()

        flavorList = ["MomCinVanLacSmoothie1lb", "MomStrawBanLacSmoothie1lb", "MomPumSpiceLacSmoothie1lb", "MomGreenLacSmoothie1lb"]
        num = 0
        for line in customerList:
            key = line.split('\t')[24]      # sets the key to the customers name
            name = line.split('\t')[13]     # the name is the name of the product, it should be in the flavorList
            if name not in flavorList:      # Checks to see if the name is in the flavorList
                pass
                num += 1
            else:
                quantity = int(line.split('\t')[15]) # Sets the quantity of product purchased
                if key not in customerDict: # Checks to see if the customer is in the dictionary
                    nameDataList = [['CV' , 0], ['SB', 0], ['PS', 0], ['MG', 0], ['Total', 0]]  # creates the list that will be used in the nameData function
                    customerDict[key] = [address(customerList, num), nameData(nameDataList, name, quantity)] #sets the values to a list with customer data, and the product they purchased.
                    num += 1
                else:
                    newNameData = customerDict[key][1] # Sets the dictionary name
                    customerDict[key] = [address(customerList, num), nameData(newNameData, name, quantity)]
                    num += 1
        outPutFile = open(pfile, 'wb') #opens the customer file
        pickle.dump(customerDict, outPutFile) # puts the new data in the customer file
        outPutFile.close()

    '''
    this method scans months and years to automatically open files saved
    '''

    def openFile():
        currentYear = date.today().year # sets the current year value by calling the date module
        year = 2015
        while (year <= currentYear): # Scans threw the years
            for i in range (1, 13): 
                month = calendar.month_abbr[i] # sets the months abbreviation by calling the calendar.month_abbr method
                createFile(month, year) #calls createFile method
            year += 1                

    '''
    check to see if file exisits. and creates customerList from a ".txt" file.
    '''
    
    def createFile(month, year):
        try:
            file = "MOMMA_Customers_"+month+"_"+str(year)+".txt"
            customerFile = open(file, 'r')
            customerList = customerFile.readlines() # creates a list of all the lines in the .txt file
            customerDict(customerList)  # calles the customerDict method
            customerFile.close() # closes the file
        except:
            return
    openFile()
main()        



